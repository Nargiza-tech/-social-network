{"version":3,"sources":["components/dialogs/dialogs.module.css","components/dialogs/Massage/Message.jsx","components/dialogs/DialogItem/DialogItem.jsx","components/dialogs/Dialogs.jsx","components/hoc/WithAuthRedirect.js","components/profile/ProfileInfo/profileInfo.module.css","components/profile/MyPosts/myPosts.module.css","components/profile/MyPosts/Posts/post.module.css","components/profile/ProfileStatus.jsx","components/profile/ProfileInfo/ProfileStatusWidthHooks.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/MyPosts/Posts/Post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"names":["module","exports","Message","props","className","message","DialogItem","path","id","classes","dialog","active","to","src","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requiredFiled","Dialogs","state","dialogsPage","dialogsElemnts","dialogs","map","d","massagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","WithAuthRedirect","Component","RedirectComponent","this","React","connect","auth","ProfileStatusWidthHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","type","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","fullName","Preloader","Post","messege","likesCount","item","maxLength10","MyPosts","memo","console","log","postsElements","posts","p","postsBlock","addPost","newPostsText","AddMyPostsForm","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.851530dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2ujhR\",\"dialogsItems\":\"dialogs_dialogsItems__2JD1x\",\"active\":\"dialogs_active__29jRq\",\"dialog\":\"dialogs_dialog__pkjN5\",\"messages\":\"dialogs_messages__27Avq\",\"addMessage\":\"dialogs_addMessage__1kZYi\",\"addMessageBtn\":\"dialogs_addMessageBtn__37ia1\"};","import React from \"react\";\r\nimport classes from './../dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n        <div className=\"dialog\"><img/>{props.message}</div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport  default Message;","import React from \"react\";\r\nimport classes from './../dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (<>\r\n\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n\r\n            <NavLink to={path}><img src=\"https://mobimg.b-cdn.net/v3/fetch/0e/0e26b1b65946ee36fac9605ae67e4ac8.jpeg\" />{props.name}</NavLink>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './dialogs.module.css';\r\nimport Message from \"./Massage/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {sendMessageCreator} from \"../../redax/dialogsReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredFiled} from \"../../utils/validators/Validators\";\r\nimport {TextArea} from \"../coman/FormsControl/FormsControl\";\r\n\r\n\r\nlet maxLength50 = maxLengthCreator(50)\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElemnts = state.dialogs.map((d)=>{\r\n        return <DialogItem name={d.name} key={d.id} id={d.id}/>\r\n    })\r\n\r\n\r\n\r\n    let massagesElements = state.messages.map((m) => {\r\n        return  <Message message={m.message} key={m.id} id={m.id}/>\r\n    })\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let AddNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n\r\n    }\r\n\r\nif(!props.isAuth)return  <Redirect to={\"/login\"}/>\r\n    return (\r\n        <>\r\n        <div className={classes.dialogs}>\r\n\r\n\r\n            <div className={classes.dialogsItems}>\r\n\r\n\r\n                {\r\n\r\n                    dialogsElemnts\r\n\r\n\r\n                }\r\nx\r\n\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                <div>{ massagesElements}</div>\r\n\r\n                        <div>\r\n                            <AddMessageFormRedux onSubmit={AddNewMessage}/>\r\n                        </div>\r\n            </div>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name='newMessageBody' placeholder=\"Enter your message\" validate={[requiredFiled, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogMessageForm\"})(AddMessageForm);\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Dialogs from \"../dialogs/Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => (\r\n    {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n\r\n);\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n              if(!this.props.isAuth)return  <Redirect to={\"/login\"}/>\r\n\r\n\r\n    return <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => (\r\n        {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n\r\n    );\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n    return  ConnectedAuthRedirectComponent;\r\n\r\n};\r\n\r\nexport default WithAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"profileInfo_descriptionBlock__ySjCy\",\"profileInfo\":\"profileInfo_profileInfo__3rnLM\",\"imgFon\":\"profileInfo_imgFon__2Rsjo\",\"oneImg\":\"profileInfo_oneImg__3GTg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"myPosts_postsBlock__3Fy7_\",\"posts\":\"myPosts_posts__kPdmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__1nMRn\"};","import React from 'react';\r\n\r\n\r\nclass ProfileStatus  extends React.Component {\r\n    // statusInputRef = React.createRef();\r\n\r\n    state = ({\r\n        editMode: false,\r\n        status: this.props.status\r\n    });\r\n\r\n\r\n//если мы создадим стрелочный метод то метод bind(this) нам не понадобитсья\r\n\r\n\r\n    ActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        // this.props.updateStatus(this.statusInputRef.current.value)\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChenge = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n          if(prevProps.status !==  this.props.status){\r\n              this.setState({\r\n          status: this.props.status\r\n      })\r\n    }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (<div>\r\n                {\r\n                    !this.state.editMode &&\r\n\r\n                    <div>\r\n           <span onDoubleClick={this.ActivateEditMode}>\r\n               {this.props.status || \"----\"}\r\n           </span>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.editMode &&\r\n\r\n                    <div>\r\n                <span>\r\n                    <input onChange={this.onStatusChenge} autoFocus={true} onBlur={this.deActivateEditMode} type=\"text\"\r\n                           value={this.state.status}/>\r\n                </span>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWidthHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode ] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n  const  ActivateEditMode = () => {\r\n      setEditMode(true);\r\n    }\r\n\r\n    const  deActivateEditMode = () => {\r\n         props.updateStatus(status);\r\n        setEditMode(false);\r\n    }\r\n\r\n\r\n    const  onStatusChenge = (e) => {\r\n       setStatus(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    return (<div>\r\n            { !editMode &&\r\n                 <div>\r\n                     <span onDoubleClick={ActivateEditMode}>{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode && <div>\r\n                    <input onChange={onStatusChenge} autoFocus={true} type=\"text\" onBlur={deActivateEditMode}\r\n                    value={status}/>\r\n\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default ProfileStatusWidthHooks;","import React from 'react';\r\nimport classes from \"./profileInfo.module.css\"\r\nimport Preloader from \"../../coman/preolader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus\";\r\nimport ProfileStatusWidthHooks from \"./ProfileStatusWidthHooks\";\r\n\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <div>\r\n           {/*<img className={classes.imgFon} src='https://picsum.photos/536/354'/>*/}\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n            </div>\r\n            <ProfileStatusWidthHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            <span>{props.profile.fullName}</span>\r\n        </div>\r\n)};\r\n\r\nexport  default  ProfileInfo;","import React from 'react';\r\nimport classes from './post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {props.messege} Like {props.likesCount}\r\n\r\n        </div>\r\n\r\n            <div className={classes.item}>\r\n                <img src=\"https://mobimg.b-cdn.net/v3/fetch/0e/0e26b1b65946ee36fac9605ae67e4ac8.jpeg\" />\r\n\r\n                    <div>\r\n\r\n\r\n                        {/*<span>Like {props.likesCount}</span>*/}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from '../MyPosts/myPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredFiled} from \"../../../utils/validators/Validators\";\r\nimport {TextArea} from \"../../coman/FormsControl/FormsControl\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"render\");\r\n    let postsElements = props.posts.map((p) => {\r\n        return <Post messege={p.message} id={p.id} key={p.id} likesCount={p.likesCount}/>\r\n\r\n\r\n    })\r\n\r\n    let OnAddPost = (values) => {\r\n        props.addPost(values.newPostsText)\r\n        console.log(values.newPostsText)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className={classes.postsBlock}>\r\n                <h3>My posts</h3>\r\n\r\n                <div>\r\n\r\n                    <AddMessageFormRedux onSubmit={OnAddPost}/>\r\n\r\n                </div>\r\n                <div className={classes.posts}>\r\n\r\n                    {\r\n                        postsElements\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n});\r\n\r\n\r\nclass AddMyPostsForm extends React.Component {\r\n    render() {\r\n        return <form onSubmit={this.props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name='newPostsText' placeholder=\"Enter your message\"\r\n                       validate={[requiredFiled, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n\r\n    }\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"myPostsForm\"})(AddMyPostsForm);\r\n\r\nexport  default  MyPosts;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redax/profile-reducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\nlet mapToDispatchProps = (dispatch) => {\r\n    return {\r\n\r\n        // updateNewPostText: (text) => {\r\n        //     dispatch(updateNewPostTextActionCreator(text))\r\n        // },\r\n\r\n        addPost: (newPostsText) => {\r\n            dispatch(addPostActionCreator(newPostsText));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapToDispatchProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {updateStatus} from \"../../redax/profile-reducer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer\r\n                // store={props.store}\r\n\r\n            />\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport  default  Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redax/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\ncomponentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n        userId = this.props.authorizedUserId;\r\n        if(!userId){\r\n            this.props.history.push(\"/login\");\r\n        }\r\n    }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n\r\n             //запрос всегда делается в componenetDidmounte\r\n}\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            <Profile {...this.props} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}