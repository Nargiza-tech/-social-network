{"version":3,"sources":["components/dialogs/dialogs.module.css","components/dialogs/Massage/Message.jsx","components/dialogs/DialogItem/DialogItem.jsx","components/dialogs/Dialogs.jsx","components/hoc/WithAuthRedirect.js","components/dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","message","DialogItem","path","id","classes","dialog","active","to","src","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requiredFiled","Dialogs","state","dialogsPage","dialogsElemnts","dialogs","map","d","massagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","WithAuthRedirect","Component","RedirectComponent","this","React","connect","auth","compose","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,WAAa,4BAA4B,cAAgB,iC,mECkBlPC,EAfA,SAACC,GAKb,OAAQ,mCAEJ,sBAAKC,UAAU,SAAf,UAAwB,wBAAOD,EAAME,c,QCQ9BC,EAdI,SAACH,GAChB,IAAII,EAAO,YAAcJ,EAAMK,GAC/B,OAAQ,mCAEJ,qBAAKJ,UAAWK,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,SAEI,eAAC,IAAD,CAASC,GAAIL,EAAb,UAAmB,qBAAKM,IAAI,+EAAgFV,EAAMW,a,kDCA1HC,EAAcC,YAAiB,IAuE7BC,EAAsBC,YAAU,CAACC,KAAM,qBAAjBD,EAZL,SAACf,GACpB,OAAO,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACC,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUV,KAAK,iBAAiBW,YAAY,qBAAqBC,SAAU,CAACC,IAAeZ,OAEjH,8BACI,kDASDa,IAtEC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAACC,GACpC,OAAO,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBN,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,OAKxC2B,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GACvC,OAAQ,cAAC,EAAD,CAAShC,QAASgC,EAAEhC,QAAoBG,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAG3BqB,EAAMS,eAQ/B,OAAInC,EAAMoC,OAEF,mCACA,sBAAKnC,UAAWK,IAAQuB,QAAxB,UAGI,sBAAK5B,UAAWK,IAAQ+B,aAAxB,UAKQT,EALR,OAaA,sBAAK3B,UAAWK,IAAQ2B,SAAxB,UACI,8BAAOD,IAEC,8BACI,cAAClB,EAAD,CAAqBG,SA5BzB,SAACqB,GACjBtC,EAAMuC,YAAYD,EAAOH,6BAIR,cAAC,IAAD,CAAU1B,GAAI,a,8JCzB1B+B,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACM,OAAIC,KAAK3C,MAAMoC,OAGlB,cAACK,EAAD,eAAeE,KAAK3C,QAHa,cAAC,IAAD,CAAUS,GAAI,eAHX,GACXmC,IAAMH,WAoBtC,OAHoCI,aAPH,SAACnB,GAAD,MAC7B,CACIU,OAAQV,EAAMoB,KAAKV,UAKSS,CAAoCH,K,iCC9B5E,yDA6BeK,sBACXF,aArB0B,SAACnB,GAEvB,MAAO,CACHC,YAAaD,EAAMC,gBAIE,SAACqB,GACtB,MAAO,CAIHT,YAAa,SAACJ,GACVa,EAASC,YAAmBd,SAShDK,IAFeO,CAIdtB","file":"static/js/4.96adefef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2ujhR\",\"dialogsItems\":\"dialogs_dialogsItems__2JD1x\",\"active\":\"dialogs_active__29jRq\",\"dialog\":\"dialogs_dialog__pkjN5\",\"messages\":\"dialogs_messages__27Avq\",\"addMessage\":\"dialogs_addMessage__1kZYi\",\"addMessageBtn\":\"dialogs_addMessageBtn__37ia1\"};","import React from \"react\";\r\nimport classes from './../dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n\r\n\r\n    return (<>\r\n\r\n        <div className=\"dialog\"><img/>{props.message}</div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport  default Message;","import React from \"react\";\r\nimport classes from './../dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (<>\r\n\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n\r\n            <NavLink to={path}><img src=\"https://mobimg.b-cdn.net/v3/fetch/0e/0e26b1b65946ee36fac9605ae67e4ac8.jpeg\" />{props.name}</NavLink>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './dialogs.module.css';\r\nimport Message from \"./Massage/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {sendMessageCreator} from \"../../redax/dialogsReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredFiled} from \"../../utils/validators/Validators\";\r\nimport {TextArea} from \"../coman/FormsControl/FormsControl\";\r\n\r\n\r\nlet maxLength50 = maxLengthCreator(50)\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElemnts = state.dialogs.map((d)=>{\r\n        return <DialogItem name={d.name} key={d.id} id={d.id}/>\r\n    })\r\n\r\n\r\n\r\n    let massagesElements = state.messages.map((m) => {\r\n        return  <Message message={m.message} key={m.id} id={m.id}/>\r\n    })\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let AddNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n\r\n    }\r\n\r\nif(!props.isAuth)return  <Redirect to={\"/login\"}/>\r\n    return (\r\n        <>\r\n        <div className={classes.dialogs}>\r\n\r\n\r\n            <div className={classes.dialogsItems}>\r\n\r\n\r\n                {\r\n\r\n                    dialogsElemnts\r\n\r\n\r\n                }\r\nx\r\n\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                <div>{ massagesElements}</div>\r\n\r\n                        <div>\r\n                            <AddMessageFormRedux onSubmit={AddNewMessage}/>\r\n                        </div>\r\n            </div>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name='newMessageBody' placeholder=\"Enter your message\" validate={[requiredFiled, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogMessageForm\"})(AddMessageForm);\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Dialogs from \"../dialogs/Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => (\r\n    {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n\r\n);\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n              if(!this.props.isAuth)return  <Redirect to={\"/login\"}/>\r\n\r\n\r\n    return <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => (\r\n        {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n\r\n    );\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n    return  ConnectedAuthRedirectComponent;\r\n\r\n};\r\n\r\nexport default WithAuthRedirect;","import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redax/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n        let mapStateToProps = (state) => {\r\n\r\n        return {\r\n            dialogsPage: state.dialogsPage\r\n        }\r\n        }\r\n\r\n        let mapDispatchToProps = (dispatch) => {\r\n            return {\r\n                // updateNewMessageBody: (body) => {\r\n                //     dispatch(updateNewMessageBodyCreator(body))\r\n                // },\r\n                sendMessage: (newMessageBody) => {\r\n                    dispatch(sendMessageCreator(newMessageBody))\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\nWithAuthRedirect     //это HOC),\r\n)\r\n(Dialogs);"],"sourceRoot":""}